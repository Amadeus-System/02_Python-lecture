# -*- coding: utf-8 -*-
"""프로그래밍 4주차 실습

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ANkirhsPyaFS0zcn5sYJ68kslPhk1CGo
"""



# 1번 문제. 전기요금을 계산하는 프로그램을 작성하여라.

# 기본요금 : 660원
# kw당 사용요금 : 88.5원
# 전체요금 = 기본요금 + (사용량 * kw당 사용요금)
# 세금은 전체 요금의 9%이므로 세금 = 전체요금 * 0.09

# 그러므로 최종사용요금 = 전체 요금 + 세금 =  전체 요금 + (전체요금 * 0.09)

기본요금 = 660           # 기본요금 변수에 660 저장
kw당_사용요금 = 88.5  # kw당_사용요금 변수에 88.5 저장

# 전기 사용량을 표준입력으로 받는다.
사용량 = int(input('전기 사용량을 입력하세요 (Kw) : ')) 

# 사용량을 알았으니 이제 전체요금을 계산할 수 있다.
전체요금 = 기본요금 + (사용량 * kw당_사용요금)
세금 = 전체요금 * 0.09
최종사용요금 = 전체요금 + 세금

print("이번달 전기 사용 요금은 " + str(최종사용요금) + ' 입니다')





'''
# 2번 문제. 자판기 프로그램 작성하기


병커피 = 1320    # 병커피의 가격을 변수에 저장한다.


# 프로그램 작동 알림
print("자판기 프로그램을 시작합니다.")

# 병커피 개수와 지불금액을 표준입력으로 받는다.
병커피_개수 = int(input('병커피는 몇 개인가요? '))
지불금액 = int(input('손님은 얼마의 금액을 지불하였나요? '))


# 지불금액에서 병커피가격 * 병커피 개수를 빼면 거스름돈이 얼마인지 알 수 있다.
거스름돈 = 지불금액 - (병커피 * 병커피_개수)


# 주문한 병커피 개수와 지불금액을 출력한다.
print('병커피 ' + str(병커피_개수) + '병을 구매하기 위해 ' + str(지불금액)+ '원을 지불하셨고,')
print('거스름돈은 ' + str(거스름돈) + '입니다.' )


# 나눗셈 연산을 이욯하여 거스름돈이 각 지폐당 몇개로 환산되는지 보여줄 수 있다.
print('거스름돈은 오천원 : ', str(거스름돈//5000), end=' ')
거스름돈 = 거스름돈 - 5000 * (거스름돈//5000)

print(' 천원 : ', str(거스름돈//1000), end=' ')
거스름돈 = 거스름돈 - 1000 * (거스름돈//1000)

print(' 오백원 : ', str(거스름돈//500), end=' ')
거스름돈 = 거스름돈 - 500 * (거스름돈//500)

print(' 백원 : ', str(거스름돈//100), end=' ')
거스름돈 = 거스름돈 - 100 * (거스름돈//100)

print(' 오십원 : ', str(거스름돈//50), end=' ')
거스름돈 = 거스름돈 - 50 * (거스름돈//50)

print(' 십원 : ', str(거스름돈//10), end=' ')
거스름돈 = 거스름돈 - 10 * (거스름돈 // 10)
'''




'''
# 3번 문제. 다음 결과 값이 나오도록 프로그램을 작성하라 (제어문자 이용, print함수 1번사용)

# 제어문자 \n을 이용하면 프린트 함수 한번 사용으로 처리할 수 있다.
# 따옴표 규칙을 주의한다.

print("""'Python' is a "programming language"\nthat lets you work quickly\nand\nintegrate systems more effectively.""")
'''




'''
# 4번 문제. 다음 결과 값이 출력되도록 하여라 (range 사용)

# list()안에 range명령어를 이용하여 list a를 정의한다.
a = list(range(5,-10,-2))

print('a는 ' + str(a) + ' 입니다.')
'''




'''
# 5번 문제.

# 증가될 숫자를 표준입력으로 받는다. 정수형으로 받는것에 주의한다.
x = int(input('증가될 숫자를 입력하시오 : '))

# 시작되는 숫자가 -10, 끝나는 숫자는 10이며, 입력된 정수만큼 증가하는 튜플을 만든다.
a = tuple(range(-10,10,x))

# 해당 튜플을 출력한다.
print(a)
'''




'''
# 6번 문제. 

# 문자열 'jesus'를 list()함수로 처리하여 spell이라는 이름의 리스트에 저장한다.
spell = list('jesus')

# 뒷부분의 's', 'u', 's'를 slice를 이용하여 'l', 'l', 'y'로 바꿔준다.
spell[2:] = ['l', 'l', 'y']

# 출력
print(spell)
'''




'''
# 7번 문제. 리스트와 인덱스를 이용하여 최근 3년간 연도와 인구수를 출력하라.

# 년도를 리스트로 저장한다.
year = list(range(2011, 2019))

# 인구수를 리스트로 저장한다.
num_people = [10249679, 10195318, 10143645, 10103233, 10022181, 9930616, 9857426, 9838892]

# 슬라이싱으로 표현하면 간편하다.
print(year[-3:])
print(num_people[-3:])
'''




'''
# 8번 문제. 표준입력으로 숫자 또는 문자열 여러개가 입력되어 리스트 x에 저장되고,
#           이후 리스트 x의 마지막 요소 5개를 삭제한 뒤, 튜플로 출력되게 만들어라.

x = []  # 빈 리스트 작성
x = (input("숫자 or 문자를 입력하시오 : ").split()) # 표준입력으로 리스트에 저장.

# 리스트 x의 마지막 요소 5개를 삭제한다. del명령어를 5번 연속 사용한다.
del x[-1]
del x[-1]
del x[-1]
del x[-1]
del x[-1]

x = tuple(x) # 리스트를 튜플로 바꿔 x에 다시 할당한다.

# 출력
print(x)
'''




'''
# 9번 문제. 다음 결과값이 나오도록 프로그램을 작성하라.

# 첫번째 문자열과 두번째 문자열을 각각 표준입력으로 받는다.
문자열1 = input("문자열 1: ")
문자열2 = input("문자열 2: ")

# 첫번째 문자열에서 인덱스 홀수인 문자와 
# 두번째 문자열에서 인덱스 짝수인 문자를 연결하여 출력한다.

print(문자열1[1:len(문자열1):2] + 문자열2[0:len(문자열2):2])
'''



'''
# 10번 문제. 수학시험을 5회 응시하여 점수를 각각 90점, 75점, 30점, 100점, 85점을 받았다.
#            이 점수들을 표준입력으로 입력받아 각각 score라는 리스트 안에 저장했고,
#            list의 성격을 이용해 평균을 구해보자.

score = [0, 0, 0, 0, 0]

# 5번의 표준입력을 받는다.
score[0] = int(input('시험 점수를 입력하시오 : '))
score[1] = int(input('시험 점수를 입력하시오 : '))
score[2] = int(input('시험 점수를 입력하시오 : '))
score[3] = int(input('시험 점수를 입력하시오 : '))
score[4] = int(input('시험 점수를 입력하시오 : '))

# 평균을 출력하기 위해 각 점수를 모두 더한 뒤, 리스트 요소의 총 개수로 나눠준다. len 사용한다.
print((score[0] + score[1] + score[2] + score[3] + score[4]) / len(score))
'''





