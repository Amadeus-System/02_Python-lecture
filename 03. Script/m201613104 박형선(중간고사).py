# -*- coding: utf-8 -*-
"""m201613104_박형선

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ckgR_gZ1SH7hS77K-8w48hcueoLOl7jx
"""

# 1. 다음 표는 카밀 게임 캐릭터의 능력치이다.

# 1) camile 이라는 이름의 dictionary를 생성하시오.

camile = {'health':576.6, 'health_regen':1.7, 'mana':338.8, 'mana_regen':1.63, 'melee':125, 'attack_damage':60}
print(camile)

# 2) 패치를 통해 camile 챔피언의 health값을 상향시키기로 하였습니다.
# health값을 580으로 변경하시오.

camile['health'] = 580  # key로 접근해서 새로운 값 할당
print(camile)

# 3) 이전패치에서 attack_speed의 값을 넣지 못했습니다.
# attack_speed 값을 0.625로 설정하고 추가하시오.

camile['attack_speed'] = 0.625  # 새로 key 추가하며 값도 할당
print(camile)

# 4) camile 딕셔너리 이용하여 shen의 캐릭터 능력치를 제작하려 한다.
# shen의 경우 마나가 아닌 기력으로 싸우는 챔피언이므로 mana_regen, mana를 제거하려 한다.
# shen이라는 딕셔너리를 camile 딕셔너리 이용하여 복사하고,
# mana_regen, mana를 제거한후 데이터를 출력한다.


shen = camile.copy()  # copy를 이용하여 복사, 이제 shen을 변경해도 camile까지 바뀌지 않는다.

del shen['mana_regen']  # mana_regen 제거
del shen['mana']        # mana 제거

print(shen)

# 2. 다음과 같은 결과가 나오도록 프로그램을 작성하시오.

# 첫번째 입력값의 범위는 1 ~ 1000
# 두번째 값의 범위는 10 ~ 1000
# 첫번째 입력값 < 두번째 입력값


# 첫번째 값과 두번째 값을 표준입력으로 받으며 int 형변환, split()은 공백기준으로 두 값을 입력받기 위함이다.
# 두 값을 동시에 형변환하므로 mapping 함수 사용
a, b = map(int, input("숫자 2개를 입력하시오 (a<b) : ").split())

if a > b:  # 첫번째 수가 두번째 수보다 큰 경우
    print("첫번째 수가 더 큽니다. 다시 입력하세요.")
    
    # 다시 표준입력으로 받기 실행한다
    a, b = map(int, input("숫자 2개를 입력하시오 (a<b) : ").split())
    
    
# 위의 if문 통과하면 이제 a, b는 확실하게 얻어진 상태이다.

# 이제 a, b를 갖고 FizzBuzz 문제풀이 시작    

for i in range(a, b+1):  # 첫번째 정수 a부터 두번째 정수 b까지 숫자를 출력
    
    if i % 10 == (a - 1) : # 입력값에서 10개마다 줄바꿈 실행
        
        if i % 5 == 0 and i % 7 == 0: # 5와 7의 공배수이면 FizzBuzz 출력, 줄바꿈 허용한다.
            print("FizzBuzz")
        elif i % 5 == 0:  # 5의 배수이면 Fizz 출력, 줄바꿈 허용한다.
            print("Fizz")
        elif i % 7 == 0:  # 7의 배수이면 Buzz 출력, 줄바꿈 허용한다.
            print('Buzz')
        else:             # 어떤 조건에도 안맞는 수는 그냥 출력, 줄바꿈 허용한다.
            print(i)
    
    elif i % 5 == 0 and i % 7 == 0:  # 5와 7의 공배수일때는 FizzBuzz 출력
        print('FizzBuzz', end=' ') # end로 줄바꿈 안함
        
    elif i % 5 == 0:  # 5의 배수일때는 Fizz 출력
        print("Fizz", end=' ') # end로 줄바꿈 안함
        
    elif i % 7 == 0:  # 7의 배수일때는 Buzz 출력
        print("Buzz", end=' ') # end로 줄바꿈 안함
    else:             # 어떤 조건에도 안 맞는 수들은 그냥 출력
        print(i, end=' ') # end로 줄바꿈 안함

# 3번. 다음과 같은 결과가 나오도록 프로그램을 작성하시오.

# 표준입력으로 길이 입력받음
N = int(input("길이를 입력하세요 : "))  # 4 입력예정


if N <= 0:  # 입력받은 수가 0보다 작거나 같으면
    print("0보다 작거나 같은 수는 입력할 수 없습니다.")  # 안된다는 메시지 출력
    
else: # 프로그램 정상 실행하면
    
    for i in range(N):  # 0부터 3까지 4번 반복, 세로위치
        for j in range(2*N):  # 0부터 7까지 8번 반복, 가로위치
            
            center = N   # 별이 찍히는 중심좌표, 대칭점
            
            if j < center - i:     # 별이 찍히는 중앙 영역의 왼쪽에 공백처리
                print(" ", end='')
            elif j > center + i:   # 별이 찍히는 중앙 영역의 오른쪽에 공백 처리
                print(" ", end='')
            else:  # 남은 영역에 별 출력
                print('*', end='')
                
        print() # 한줄 다 채우고 줄바꿈
        
    # 1~4번 세로줄까지는 위의 for문으로 출력하고 
    # 아래쪽에 별이 서서히 작게 출력되어가는 세로줄을 다시 새로운 for문으로 출력한다.
    
    for i in range(1, N):  # 1부터 3까지 3번 반복, 밑부분의 세로줄 3개 출력하기위함
        print(" " *(i+1) + '*'*((2*N-1) -2*i)) # 규칙에 맞게 공백과 별 출력

# 4번. 다음은 게임 프로그램 제작을 위해 필요한 정보이다.
# 1) character 라는 이름의 중첩 딕셔너리를 만들고 출력하세요.

# item에 있는 값은 딕셔너리로, skill에 있는 값은 리스트로 표현한다.
character = {'name':'헬스크림', 'class':'전사', 'level':60, 'item':{'weapon':'공포의복수자', 'armor':'풀플레이트'}, 
             'skill':['베기', '찌르기']}  

for key, value in character.items(): # 딕셔너리의 key, value를 .items() 메소드로 불러들이고
    
    print(key,':',value)  # 그 각각에 대해 출력

# 2) 게임 중에 item의 weapon을 보스몹을 레이드 후 보상으로 획득하였다. 아이템 이름은 '서리한'이다.
# 반복문과 조건문을 이용하여 해당 weapon(키)를 찾아 
# '공포의복수자' --> '서리한'으로 바꿔주고 다시 출력하자


# 반복문 이용
for key, value in character.items():  # 딕셔너리의 key, value를 .items() 메소드로 불러들임, 각각의 키와 값에 대하여
    
    # 조건문 이용
    if key == 'item': # item 이라는 특정 key를 찾으면
        
        # 중첩 key로 내부 딕셔너리 정보에 접근
        character['item']['weapon'] = '서리한'  # 내부정보 변경, 공포의 복수자 --> 서리한으로 변경해준다.
  

for key, value in character.items():  # 딕셔너리의 key, value를 .items메소드로 불러들이고
    print(key, ':', value) # 각각의 키와 값을 출력

